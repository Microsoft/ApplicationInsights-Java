// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataPoint.proto

package com.microsoft.localforwarder.library.inputs.contracts;

public interface DataPointOrBuilder extends
    // @@protoc_insertion_point(interface_extends:contracts.DataPoint)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional string ns = 1;</code>
   */
  java.lang.String getNs();
  /**
   * <code>optional string ns = 1;</code>
   */
  com.google.protobuf.ByteString
      getNsBytes();

  /**
   * <code>optional string name = 2;</code>
   */
  java.lang.String getName();
  /**
   * <code>optional string name = 2;</code>
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Metric type. Single measurement or aggregated value
   * </pre>
   *
   * <code>optional .contracts.DataPointType kind = 3;</code>
   */
  int getKindValue();
  /**
   * <pre>
   * Metric type. Single measurement or aggregated value
   * </pre>
   *
   * <code>optional .contracts.DataPointType kind = 3;</code>
   */
  com.microsoft.localforwarder.library.inputs.contracts.DataPointType getKind();

  /**
   * <pre>
   * Single value for a Measurement, sum of individual measurements for an Aggregation
   * </pre>
   *
   * <code>optional double value = 4;</code>
   */
  double getValue();

  /**
   * <pre>
   * should not be set for a measurement
   * </pre>
   *
   * <code>optional .google.protobuf.Int32Value count = 5;</code>
   */
  boolean hasCount();
  /**
   * <pre>
   * should not be set for a measurement
   * </pre>
   *
   * <code>optional .google.protobuf.Int32Value count = 5;</code>
   */
  com.google.protobuf.Int32Value getCount();
  /**
   * <pre>
   * should not be set for a measurement
   * </pre>
   *
   * <code>optional .google.protobuf.Int32Value count = 5;</code>
   */
  com.google.protobuf.Int32ValueOrBuilder getCountOrBuilder();

  /**
   * <pre>
   * should not be set for a measurement
   * </pre>
   *
   * <code>optional .google.protobuf.DoubleValue min = 6;</code>
   */
  boolean hasMin();
  /**
   * <pre>
   * should not be set for a measurement
   * </pre>
   *
   * <code>optional .google.protobuf.DoubleValue min = 6;</code>
   */
  com.google.protobuf.DoubleValue getMin();
  /**
   * <pre>
   * should not be set for a measurement
   * </pre>
   *
   * <code>optional .google.protobuf.DoubleValue min = 6;</code>
   */
  com.google.protobuf.DoubleValueOrBuilder getMinOrBuilder();

  /**
   * <pre>
   * should not be set for a measurement
   * </pre>
   *
   * <code>optional .google.protobuf.DoubleValue max = 7;</code>
   */
  boolean hasMax();
  /**
   * <pre>
   * should not be set for a measurement
   * </pre>
   *
   * <code>optional .google.protobuf.DoubleValue max = 7;</code>
   */
  com.google.protobuf.DoubleValue getMax();
  /**
   * <pre>
   * should not be set for a measurement
   * </pre>
   *
   * <code>optional .google.protobuf.DoubleValue max = 7;</code>
   */
  com.google.protobuf.DoubleValueOrBuilder getMaxOrBuilder();

  /**
   * <pre>
   * should not be set for a measurement
   * </pre>
   *
   * <code>optional .google.protobuf.DoubleValue stdDev = 8;</code>
   */
  boolean hasStdDev();
  /**
   * <pre>
   * should not be set for a measurement
   * </pre>
   *
   * <code>optional .google.protobuf.DoubleValue stdDev = 8;</code>
   */
  com.google.protobuf.DoubleValue getStdDev();
  /**
   * <pre>
   * should not be set for a measurement
   * </pre>
   *
   * <code>optional .google.protobuf.DoubleValue stdDev = 8;</code>
   */
  com.google.protobuf.DoubleValueOrBuilder getStdDevOrBuilder();
}
