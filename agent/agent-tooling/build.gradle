/*
 * ApplicationInsights-Java
 * Copyright (c) Microsoft Corporation
 * All rights reserved.
 *
 * MIT License
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this
 * software and associated documentation files (the ""Software""), to deal in the Software
 * without restriction, including without limitation the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software, and to permit
 * persons to whom the Software is furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
 * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
 * FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

plugins {
    id 'com.github.johnrengelman.shadow'
}

apply from: "$buildScriptsDir/common-java.gradle"

repositories {
    // this is needed as long as we are using OpenTelemetry SNAPSHOT
    mavenLocal()
}

dependencies {
    def includeProfiler = project.hasProperty("includeProfiler") ? project.includeProfiler.toBoolean() : false
    if (includeProfiler) {
        implementation project(":agent:agent-profiler:agent-service-profiler")
        implementation project(":agent:agent-gc-monitor:gc-monitor-core")
    }

    // not using gson because it has dependency on java.sql.*, which is not available in Java 9+ bootstrap class loader
    // only complaint so far about moshi is that it doesn't give line numbers when there are json formatting errors
    implementation group: 'com.squareup.moshi', name: 'moshi', version: versions.moshi

    implementation group: 'com.google.guava', name: 'guava', version: versions.guava

    implementation(group: 'io.opentelemetry.javaagent', name: 'opentelemetry-javaagent-tooling', version: versions.opentelemetryInstrumentationAlpha) {
        exclude group: 'io.opentelemetry', module: 'opentelemetry-exporter-jaeger'
        exclude group: 'io.opentelemetry', module: 'opentelemetry-exporter-logging'
        exclude group: 'io.opentelemetry', module: 'opentelemetry-exporter-otlp'
        exclude group: 'io.opentelemetry', module: 'opentelemetry-exporter-otlp-metrics'
        exclude group: 'io.opentelemetry', module: 'opentelemetry-exporter-prometheus'
        exclude group: 'io.opentelemetry', module: 'opentelemetry-exporter-zipkin'
        exclude group: 'io.grpc', module: 'grpc-netty'
    }
    implementation group: 'io.opentelemetry.javaagent', name: 'opentelemetry-javaagent-spi', version: versions.opentelemetryInstrumentationAlpha
    implementation group: 'net.bytebuddy', name: 'byte-buddy', version: versions.bytebuddy

    implementation group: 'commons-codec', name: 'commons-codec', version: versions.commonsCodec
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: versions.commonsLang
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: versions.apacheHttpClient

    implementation group: 'org.checkerframework', name: 'checker-qual', version: versions.checker

    implementation(project(':core')) {
        // excluding commons-logging and replacing it with jcl-over-slf4j (below)
        // in order to pick up logging from apache http client
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    implementation group: 'org.slf4j', name: 'jcl-over-slf4j', version: versions.slf4j
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback

    implementation project(":agent:agent-profiler:agent-profiler-api")

    implementation project(':agent:exporter')
    implementation group: 'io.opentelemetry', name: 'opentelemetry-sdk-extension-tracing-incubator', version: versions.opentelemetryAlpha
    implementation group: 'io.opentelemetry', name: 'opentelemetry-sdk-extension-autoconfigure', version: versions.opentelemetryAlpha

    compileOnly project(':agent:agent-bootstrap')
    compileOnly group: 'io.opentelemetry.instrumentation', name: 'opentelemetry-instrumentation-api', version: versions.opentelemetryInstrumentationAlpha

    testImplementation project(':agent:agent-bootstrap')
    testImplementation group: 'io.opentelemetry.instrumentation', name: 'opentelemetry-instrumentation-api', version: versions.opentelemetryInstrumentationAlpha

    testImplementation group: 'junit', name: 'junit', version: versions.junit
    testImplementation group: 'org.hamcrest', name: 'hamcrest-core', version: versions.hamcrest
    testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: versions.hamcrest
    testImplementation group: 'org.mockito', name: 'mockito-core', version: versions.mockito
    testImplementation group: 'com.github.stefanbirkner', name: 'system-rules', version: versions.systemRules
}
